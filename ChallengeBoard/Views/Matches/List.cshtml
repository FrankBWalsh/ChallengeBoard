@using ChallengeBoard.ViewModels;
@model RecentMatchesViewModel
@{
    ViewBag.Title = "Match Activity";
}
@Html.Partial("_HeaderPartial", new ChallengeBoard.Infrastucture.PageHeader(Model.Board.Name, "Activity"))
@Html.Partial("_BoardNav", Model.Board)
<div class="well">
    Below you will find pending and recent matches.  Pending matches have not had their verification period expire 
    and are not counted in the standings yet.  Recent matches are official and are reflected in the standings.  
    For more information, read up on the @Html.ActionLink("match approval process", "Instructions", "Boards", null,
                 null, "approval",new { id = Model.Board.BoardId }, null).
</div>
<ul class="nav nav-tabs">
    <li class="active"><a href="#pending" data-toggle="tab">Pending Matches</a></li>
    <li><a href="#recent" data-toggle="tab">Recent Matches</a></li>
    <li><a href="#comments" data-toggle="tab">Comments View</a></li>
</ul>
<div class="tab-content">
    <div class="tab-pane active" id="pending">
        <h3>Pending Matches 
            @if (Model.UnVerified.Any())
            {
                @:(@Model.UnVerified.Count())
            }
        </h3>
        @if (Model.UnVerified.Any())
        {
            
            @Html.Partial("_MatchesPartial", new MatchesViewModel{ Matches = Model.UnVerified, Viewer = Model.Viewer })
        }
        else
        {
            <div class="well">
                No outstanding matches require verification.
            </div>
        }
        <p>
            <small class="muted">* Pending match +/- and rating calculations include unverified matches.  They may change if matches are rejected.</small><br />
            
        </p>
    </div>
    <div class="tab-pane" id="recent">
        <h3>Recent Matches</h3>

        @if (Model.Verified.Any())
        {
            @Html.Partial("_MatchesPartial", new MatchesViewModel{ Matches = Model.Verified, Viewer = Model.Viewer })
        }
        else
        {
            <div class="well">
                No matches have been played on this Challenge Board yet.
            </div>
        }
    </div>
    <div class="tab-pane" id="comments">
        <h3>Match Comments</h3>
        @{
            var commentedMatches = Model.Verified.Concat(Model.UnVerified)
                                                 .Where(m => !String.IsNullOrWhiteSpace(m.WinnerComment))
                                                 .OrderByDescending(m => m.Created).ToList();
        }
        @if (commentedMatches.Any())
        {
            @Html.Partial("_MatchCommentsPartial", commentedMatches)
        } else {
            <div class="well">
                No matches have comments yet.
            </div>
        }
    </div>
</div>

<div id="myModal" class="modal hide fade" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">
    @using (Html.BeginForm("Finalize", "Matches", null, FormMethod.Post, new { id = "FinalizeForm" }))
    {
        <div class="modal-header">
            <a class="close" data-dismiss="modal">&times;</a>
            <h3 id="myModalLabel">You are about to decide the following match</h3>
        </div>
        <div class="modal-body">
            <input id="boardId" name="boardId" type="hidden" data-bind="value: boardId">
            <input id="matchId" name="matchId" type="hidden" data-bind="value: matchId">
            <div class="centered-text matchVerification well">
                <h4 class="label-success">Match Winner</h4>
                <p data-bind="text: winner"></p>
                <p>
                    <b>Rating Change:</b>
                    &nbsp;
                    <span data-bind="css: { 'arrow-up' : winnerRatingDelta() > 0, 'arrow-down' : winnerRatingDelta() < 0 }"></span>
                    &nbsp;
                    <span data-bind="text: winnerRatingDelta"></span>
                </p>
            </div>
            <div class="matchSpacer">
            </div>
            <div class="centered-text matchVerification well">
                <h4 class="label-info">Match Loser</h4>
                <p data-bind="text: loser"></p>
                <p>
                    <b>Rating Change:</b>
                    &nbsp;
                    <span data-bind="css: { 'arrow-up' : loserRatingDelta() > 0, 'arrow-down' : loserRatingDelta() < 0 }"></span>
                    &nbsp;
                    <span data-bind="text: loserRatingDelta"></span>
                </p>
            </div>
            <div class="centered-text well well-small">
                <h3 class="lead" data-bind="text: actionDescription"></h3>
                <div class="controls">
                    @Html.TextBox("FinalizationRequest", "", new { data_bind = "value: confirmation, valueUpdate: 'keyup'", maxlength = 8, @class = "danger input-small", autocomplete = "off" })
                </div>
            </div>
        </div>
        <div class="modal-footer">
            <a class="btn" data-dismiss="modal" aria-hidden="true">Close</a>
            <button id="Finalize" type="submit" class="btn btn-primary" data-bind="enable: actionConfirmed">Finalize Match</button>
        </div>
    }
</div>
@section Scripts {
    @Scripts.Render("~/bundles/knockout")
    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render("~/bundles/components")
    <script type="text/javascript">
        $(function() {
            var matchResult = new MatchModel();
            ko.applyBindings(matchResult);

            // Accidental submission insurance
            $('#FinalizeForm').submit(function () {
                return $('#Finalize').attr('disabled') == undefined;
            });

            // User wants to reject a match.  Set the ViewModel and pop the modal
            $('.validate').click(function() {

                matchResult.winner(this.getAttribute('data-winner'));
                matchResult.winnerRatingDelta(this.getAttribute('data-winnerRatingDelta'));
                matchResult.loser(this.getAttribute('data-Loser'));
                matchResult.loserRatingDelta(this.getAttribute('data-loserRatingDelta'));
                matchResult.matchId(this.getAttribute('data-matchId'));
                matchResult.boardId(this.getAttribute('data-boardId'));
                matchResult.action(this.getAttribute('data-action'));
                matchResult.confirmation('');

                $('#myModal').modal();

                return false;
            });

            // Add table sorting.
            $(".sortedTable").tablesorter({
                headers: {
                    0: { sorter: 'eloChange' },
                    2: { sorter: 'eloChange' }
                },
                sortList: [[5, 1]],
                sortInitialOrder: 'desc'
            });
        });
    </script>
}